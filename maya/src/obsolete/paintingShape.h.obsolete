#ifndef _paintingShape
#define _paintingShape

/////////////////////////////////////////////////////////////////////
#include <maya/MIOStream.h>
#include <maya/MPxSurfaceShape.h>
#include <maya/MBoundingBox.h>
#include <maya/MStatus.h>
#include <maya/MTypeId.h>
#include <maya/MVectorArray.h>
#include <maya/MDoubleArray.h>
#include <maya/MFnMesh.h>

#include "painting_data.h"
#include "errorMacros.h"

/////////////////////////////////////////////////////////////////////
class paintingShape : public MPxSurfaceShape
{
public:

	static	MTypeId	id;

	static	MObject aDiffuseWeight;
	static	MObject aIncandescentWeight;

	static MObject aInMatrix;
	// curves
	static MObject	aCurve;
	static MObject  aPointDensity;
	static MObject	aStrokeLength;
	static MObject	aAttack;
	static MObject	aLift;
	static MObject	aElevation;
	static MObject	aBrushId;
	static MObject	aPaintId;
	static MObject	aCurves;

	//  brushes
	static MObject	aBrushWidth;
	static MObject	aBrushName;
	static MObject	aBrushTcp;
	static MObject	aBrushTip;
	static MObject	aBrushes;

	// paint
	static MObject	aPaintColorR;
	static MObject	aPaintColorG;
	static MObject	aPaintColorB;
	static MObject	aPaintColor;
	static MObject	aPaintName;
	static MObject	aPaintOpacity;
	static MObject	aPaints;

	// normal of the plane
	static MObject	 aNormal;
	static MObject	 aSpacing;

	// output
	static MObject aOutCounts;
	static MObject  aOutPointsWorld;
	static MObject  aOutPointsLocal;
	static MObject  aOutNormalsWorld;
	static MObject  aOutNormalsLocal;

	// display
	static MObject aDisplayPoints;
	static MObject aDisplayNormals;
	static MObject aDisplaySegments;
	static MObject aDisplayStrokeGap;
	static MObject aNormalLength;
	static MObject aPointSize;
	static MObject aColor;
	static MObject aNormalColor;

	paintingShape();
	virtual ~paintingShape();

	virtual void			postConstructor();

	virtual MStatus			compute( const MPlug &, MDataBlock & );

	virtual bool            isBounded() const;
	virtual MBoundingBox    boundingBox() const;

	static  void 		*creator();
	static  MStatus		initialize();

	paintingData		*geometry();

private:

	paintingData *m_geomData;


};

#endif
