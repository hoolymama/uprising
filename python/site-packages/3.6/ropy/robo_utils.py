import sys
import json
from robolink import *
from robodk import *

from tkinter import *
from tkinter import messagebox

# import tk_message_box

RDK = Robolink()
# TOP = Tkinter.Tk()

for m in sys.modules:
    print(m)


def reset():

    robot = RDK.Item('KR-30-3')
    robot.setJoints([0,0,0,0,0,0])
    print("Reset KR-30-3")


def addGeo():
    points = []
    points.append([1000, 0 , -1000])
    points.append([1000, 1000 , -1000])
    points.append([0, 1000 , -1000])
    
    RDK.AddShape(points)

def touchTargets():
    robot = RDK.Item('KR-30-3')
    robot.setJoints([0,0,0,0,0,0])

    target = RDK.Item('southTestTarget1')         # retrieve the Target item
    robot.MoveJ(target)   
    target = RDK.Item('southTestTarget2')         # retrieve the Target item
    robot.MoveL(target)   
    target = RDK.Item('southTestTarget3')         # retrieve the Target item
    robot.MoveL(target)   
    target = RDK.Item('southTestTarget4')         # retrieve the Target item
    robot.MoveL(target)   

# Add a button and default action to execute the current choice of the user
 

def build(node, parent=0):
    if node["type"] == "grp":
        item = RDK.AddFrame(node["name"], itemparent=parent)
        pose = Mat(node["matrix"] )
        item.setPose(pose)
        for child in node["children"]:
            build(child, parent=item)
    elif node["type"] == "stl":
        item = RDK.AddFile(node["filename"], parent=parent)
        item.setColor(list(node["color"]))
    elif node["type"] == "locator":
        item = RDK.AddTarget(node["name"], itemparent=parent)
        pose = Mat(node["matrix"] )
        item.setPose(pose)
    else:
        pass


def read_hi_stl():

    fn = getOpenFile(path_preference='/Users/julian/projects/robot/data/')

    try:
        data = json.load(open(fn))
    except IOError as ex:
        messagebox.showinfo("Error", ex.message)

    for node in data:
        build(node)



def test_bounds():
    pass

    # root = Tk()
    # root.title("Program settings")
    # entry_speed = StringVar()
    # entry_speed.set("foo bar")
    # Label(root, text="Weld speed").pack()
    # Entry(root, textvariable=entry_speed).pack()


    # dryrun = IntVar()
    # dryrun.set(3)     # setting up default value

    # Checkbutton(root, text="Dry run", variable=dryrun, onvalue=1, offvalue=0, height=5, width=20).pack()

    # Button(root, text='Simulate/Generate', command=ExecuteChoice).pack()

    # root.mainloop()

    # tk.askokcancel("HJello", "What to do")




    # tkmessagebox.askokcancel("HJello", "What to do")

    # robot = RDK.Item('KR-30-3')
    # robot.setJoints([0,0,0,0,0,0])

    # pass

# /usr/local/bin/python3.6
# /Users/julian/bin/subl -n -w